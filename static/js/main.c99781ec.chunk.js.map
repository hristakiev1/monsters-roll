{"version":3,"sources":["card-component/card.jsx","card-list/card-list.jsx","search-bar/search-bar.jsx","database.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBar","onSearch","placeholder","type","onChange","peoples","App","state","searchField","handleSearch","e","setState","target","value","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAgBeA,G,kBAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEL,6BAAKJ,EAAQK,OACb,8BAAML,EAAQM,aCGLC,EAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCMZM,G,MAXG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7B,OACE,uBACEX,UAAU,SACVY,KAAK,SACLD,YAAaA,EACbE,SAAUH,MCTVI,EAAU,CACd,CAAEX,GAAI,EAAGC,KAAM,oBAAqBC,MAAO,oBAC3C,CAAEF,GAAI,EAAGC,KAAM,aAAcC,MAAO,sBACpC,CAAEF,GAAI,EAAGC,KAAM,kBAAmBC,MAAO,iBACzC,CAAEF,GAAI,EAAGC,KAAM,mBAAoBC,MAAO,6BAC1C,CAAEF,GAAI,EAAGC,KAAM,iBAAkBC,MAAO,kBACxC,CAAEF,GAAI,EAAGC,KAAM,mBAAoBC,MAAO,gBAC1C,CAAEF,GAAI,EAAGC,KAAM,iBAAkBC,MAAO,eACxC,CAAEF,GAAI,EAAGC,KAAM,mBAAoBC,MAAO,iBAC1C,CAAEF,GAAI,EAAGC,KAAM,mBAAoBC,MAAO,mBAC1C,CAAEF,GAAI,GAAIC,KAAM,qBAAsBC,MAAO,kB,IC+BhCU,E,4MAlCbC,MAAQ,CACNT,SAAU,GACVU,YAAa,I,EAGfC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,OAAOC,S,kEAItCC,KAAKH,SAAS,CAAEb,SDHXO,M,+BCSG,IAAD,EAC2BS,KAAKP,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YAEZO,EAAmBjB,EAASkB,QAAO,SAAC1B,GAAD,OACvCA,EAAQK,KAAKsB,cAAcC,SAASV,EAAYS,kBAGlD,OACE,sBAAK1B,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CAAWU,SAAUa,KAAKL,aAAcP,YAAY,kBAEpD,cAAC,EAAD,CAAUJ,SAAUiB,W,GA7BVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c99781ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-component.css\";\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${monster.id}?set=set5&size=180x180`}\r\n      />\r\n      <h2>{monster.name}</h2>\r\n      <div>{monster.email}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list-style.css\";\r\nimport Card from \"../card-component/card\";\r\n\r\nconst CardList = ({ monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search-bar.style.css\";\r\n\r\nconst SearchBar = ({ onSearch, placeholder }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={onSearch}\r\n    />\r\n  );\r\n};\r\n// onInput={monsters.include}\r\nexport default SearchBar;\r\n","const peoples = [\r\n  { id: 1, name: \"Hristo Hristakiev\", email: \"axsmarine@abv.bg\" },\r\n  { id: 2, name: \"Ivan Bonev\", email: \"injmenBonev@abv.bg\" },\r\n  { id: 3, name: \"Adrian Georgiev\", email: \"lorian@abv.bg\" },\r\n  { id: 4, name: \"Dimitar Grigorov\", email: \"chestit-rojden-den@abv.bg\" },\r\n  { id: 5, name: \"Mario Germanov\", email: \"kopriva@abv.bg\" },\r\n  { id: 6, name: \"Aleksandar Rusev\", email: \"bezos@abv.bg\" },\r\n  { id: 7, name: \"Martin Lazarov\", email: \"4:20@abv.bg\" },\r\n  { id: 8, name: \"Georgia De Marki\", email: \"saveti@abv.bg\" },\r\n  { id: 9, name: \"Daniela Balareva\", email: \"danigirl@abv.bg\" },\r\n  { id: 10, name: \"Kristian Bachvarov\", email: \"4:20x2@abv.bg\" },\r\n];\r\n\r\nexport function getPeople() {\r\n  return peoples;\r\n}\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport CardList from \"./card-list/card-list\";\nimport SearchBar from \"./search-bar/search-bar\";\nimport { getPeople } from \"./database\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  handleSearch = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  componentDidMount() {\n    this.setState({ monsters: getPeople() });\n    // fetch(\"https://jsonplaceholder.typicode.com/users/\")\n    //   .then((response) => response.json())\n    //   .then((monsters) => this.setState({ monsters }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Hit and Run</h1>\n        <SearchBar onSearch={this.handleSearch} placeholder=\"search monsta\" />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}